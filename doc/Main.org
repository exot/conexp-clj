#+title: ~conexp-clj~ â€“ A General Purpose Tool for Formal Concept Analysis

#+options: toc:t

#+bind: org-export-filter-link-functions (tmp-localize-links)
#+begin_src emacs-lisp :exports none :results silent
(defun tmp-localize-links (text backend info)
  (message text)
  (cond
   ((org-export-derived-backend-p backend 'html)
    (replace-regexp-in-string "href=\"[^\"]*#[^\"]*\"" "href=foo" text))
   (t text)))
#+end_src

* A Quick Introduction

#+include: Getting-Started.org

#+include: tutorials/icfca-2013/icfca2013-tutorial-live.org

* A Tour through ~conexp-clj~

#+include: Basic-Notation-and-Syntax.org
#+include: Formal-Contexts.org
#+include: Concept-Lattices.org
#+include: IO.org
#+include: Implications.org
#+include: Exploration.org
#+include: Scaling-Many-Valued-Contexts.org

* Example Use Cases for ~conexp-clj~

** Formal Contexts from Implications
#+include: code/implication-closure.clj src clojure

** A Formal Context of Functions
#+include: code/function-context.clj src clojure

** Context of All Permutations on a Finite Set
#+include: code/permutation-context.clj src clojure

** The Tamari Lattice

#+include: code/tamari-lattice.clj src clojure

** Preconcept Covers

#+include: code/covering-preconcepts.clj src clojure

** Number of Elements of the Free Distributive Lattice
#+include: code/free-distributive-lattice.clj src clojure

** Counting Linear Extensions

#+include: code/linear_extensions.clj src clojure

** Computing Traces in Contexts
#+include: code/trace-context.clj src clojure

** Counting Quasiorders

#+include: code/quasiorders.clj src clojure

** Rudolph's Algorithm for Computing Bases
#+include: code/rudolph_computation.clj src clojure

** Compute the Canonical Base from a Formal Context in CSV Format

#+include: tutorials/How-to-compute-the-Canonical-Base-from-a-Context-given-in-CSV-Format.org

* Advanced Topics

** pq-cores
#+include: pq-cores-in-Formal-Contexts.md src markdown

** REST-API Usage
#+include: REST-API-usage.md src markdown

* API documentation
#+include: API.md src markdown

* Development

#+include: Development.org

# Local Variables:
# org-export-allow-bind-keywords: t
# End:
